Assignment 1 SE
Q1 - How do you scale up the Agile method of Software development?
We need to have the right environment and mindset to scale agile software development across all disciplines. Following ways help us to scale agile method –
1. Finding the North Star
Every company must have a clear vision and goal for their product. Finding their own vision and goal is not always easy, but the north star metric can help. The north star will give the whole organization a clear vision and mission. It gives teams guidance towards the right product decisions and direction. Furthermore, it communicates the impact and progress to the rest of the company to get more support from other departments.
Mainly companies should have a good star metric which consists of two parts -:
•	A vision product for the product
•	A metric that is the key measurement of the current product strategy
2. Invest in Development Infrastructure
Modern software products must be built as small independent units to run on large scale technology stacks without interfering with other parts of the product. With the help of a microservice architecture, multiple agile development teams can deploy and release independent from each other to the production systems. The teams can deploy as early as possible and can monitor the behaviour on the production systems. In case there is a problem, the team can either revert or fix the issue right away.
3. Keep the teams small & independent
The best way to scale agile software development across the entire company is to have small independent teams. The small team can focus on one part of the whole product to follow the companies north star. And it’s important that everyone on the team has an agile mindset.  Everybody on the team must feel responsible for the outcome. If one person in an agile team fails, the whole team will fail the sprint goal.
4. Growing with the demands of people
 A company should invest in building or migrating the product with the latest technologies as well as software development patterns to establish a microservice architecture. It will help the company to release as early as possible to production and provide the possibility to easily revert the changes without taking down the whole product.
5. Talent acquisition and motivation.
Companies that are scaling up agile need systems for acquiring star players and motivating them to make teams better. (Treat your stars unfairly, and they will bolt to a sexy start-up.) They also need to unleash the wasted potential of more-typical team members and build commitment, trust, and joint accountability for outcomes.
6. Annual planning and budgeting cycles.
In bureaucratic companies, annual strategy sessions and budget negotiations are powerful tools for aligning the organization and securing commitments to stretch goals. Unproductive projects burn resources until their budgets run out, while critical innovations wait in line for the next budget cycle to compete for funding.

Q2 - What are the challenges faced and what are the possible solutions proposed? Make sure you give references.
The study is been divided into three main subjects: first is how to gain success in large-scale project and how to gain success attributes upon using Agile method 
The second is the challenges the faced upon using Agile in globally distributed environment project
The third is suggest a recommendation to overcome each challenge that certainly will help the project manager to deal if any challenge occurs Keywords: Agile adoption, large-scale success factor, Agile Large-Scale Software Development, Agile Challenges.
Challenges which are identified in implementation of Agile Methodology in software development :-
Challenges which are identified in implementation of Agile Methodology in software development :-
1.	People’s behavioral change(Change Resistance) :- 
Agile is a new technology and it’s still in development so, as we know that it’s not easy to change the people’s mindset unless and until there is an exceptionally good reason to change. People are always resist to change.

As we know that “Great things never came from comfort zone”. The point is that rather than replacing whole technology with Agile, start with incremental approach and involving one of the enthusiastic team to this work. 
It is also good to have open-minded individuals in senior executive seats, preferably good communicators, who are able to set the right organizational attitude for embracing the change.

2.	Strict Time Limit:- 
Agile follows a rule “Keeping Everything Time-Boxed”. For example Daily Scrum(Implementation of Agile) event should not exceed certain fixed time.
But as we are all aware that you can’t bind the people to discuss their issues or difficulties and takes longer than the allocated time. It’s one of the most common issue in Agile manifesto.

It’s good if all the work going on parallel but it’s not always feasible and efficient to unnecessarily schedule the meeting. So, the solution is rather than completely following the manifesto try to re-make it as the company’s ease.  

3.	Distributed Teams and Pair Programming:-
In distributed principle all the teams may distributed geographically, it may cause time delays, network issues or regional issues , different Time zones and different working hours. Communication is the core issue among distributed teams.  It’s always difficult to be connected and collaborated every time. Adopting Pair programming is not efficient when the task is simple enough because it may severely limits the productivity of a team and increase the cost of development efforts exponentially.

Solution for Distributed Teams is that company can organize some Boot camps, so that the distributed team knew each other and get clear understanding of customer goals, expectations, and a shared enthusiasm. Tooling, architecture design, and standards may also be discussed and agreed. 

A good rule of thumb is that pair-programming is best applied to production code that needs to be maintained. 


4.	Handling Buggs and Urgent on-demand Tasks:-
Not all of these issues can wait for the next release. Some of them can be filed in the Backlog and wait for their turn, but some have to be handled as soon as they arise, potentially even “in real time” as per clients’ demands.  But things might change within an iteration if there is a good reason for them to change and the change can be justified.
Ultimately, the goal is to build the right product. Blindly following a process probably will not make the Agile developer as it takes to deliver value to the customer.

Inevitably, as the project moves forward, bugs will appear out of the woodwork—perhaps not so many in the early stages of development, but certainly as the project is nearing a production release. Therefore, it’s a good idea to increase the time allocated for fixes as development progresses.

 
5.	Documentation
The Challenge Most Large organizations favour Plan-driven approach where detailed sent and written is to be constructed. But in Agile, the teams tend to reduce documentation from the observation that a large part of effort is wasted in the documentation process. So, when teams are distributed, there is a big chance to miss out some details about the project, and this leads to suffering a gap in the documentation that will make some misunderstanding of the project. Also, the Agile teams consider the documentation as a heavy mind-set process that is worth to focus on. That's why they focus on the code and considered documentation is a “document as needed”

Improves large-scale development team collaboration process while using Agile method by maintaining valuable documentation. Reducing the misunderstandings and improves the team collaboration through providing users stories and scenarios combined with use cases diagram in a globally accessible backlog. Helps to maintain documentation and transparency by using a number of tools or tracker (e.g. Jira), and project management tools(e.g. Scrum works).
6. Knowledge Sharing –
The Challenges Lack of business knowledge among developers, so they can't share any information about the project, and it's become more difficult to learn and share information about a large project. Specially, the first sprint will be delivered in 2-4 weeks, so the team doesn't have the time to learn about the project domain.
Solutions
•	Training sessions on the basics in the business knowledge and the customer company specific areas run by the customer.
•	 Provide a small training module that makes it interactive to allow developers gain position in the project business knowledge. 
•	Training sessions in IT and business knowledge.

7. Lack of social skills-
The Challenges Agile practices such as co-located, on-site customer meetings, and pair programming all are needed for social, communication and presentation skills. So, it will be a challenge for some personnel who are technically very talented, but inherently weak in terms of communications and personal skills.
So this challenge can distend and add more challenges for the projects such as; bad customer relationship, bad team members relationships. This will ultimately affect the project construction and delivery.
Solutions
•	Merge development and practical training programs to provide customized training materials on social skills and knowledge domain, and using developers' own examples.
•	Using appropriate documentation to support communication and details
¬¬¬¬References – 
https://www.applause.com/blog/how-to-scale-agile-software-development
https://hbr.org/2018/05/agile-at-scale
https://www.researchgate.net/publication/292981218_Agile_Large-Scale_Software_Development_Success_Factors_Challenges_and_Solutions

Name – Utkarsh Tiwari
Roll No. - 201851138
